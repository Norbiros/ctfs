import itertools
import string
import subprocess
from multiprocessing import Pool, cpu_count, Value, Lock

charset = string.ascii_letters + string.digits + "_-@$"
target_prefix = "ecsc25{"
target_suffix = "}"
flag_length = 16
guess_length = flag_length - len(target_prefix) - len(target_suffix)  # 7

batch_size = 10000  # Print update every 10k attempts

counter = Value('i', 0)
counter_lock = Lock()

def try_flag(guess_tuple):
    guess = ''.join(guess_tuple)
    flag = f"{target_prefix}{guess}{target_suffix}"
    if len(flag) != flag_length:
        return None
    cmd = f"./quine {flag}"
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    output = result.stdout.strip()
    if "Wrong" not in output:
        if result.stderr:
            return None
        return flag, output
    return None

def update_counter(_):
    with counter_lock:
        counter.value += 1
        if counter.value % batch_size == 0:
            print(f"Checked {counter.value} attempts")

def main():
    pool = Pool(cpu_count())
    attempts = itertools.product(charset, repeat=guess_length)

    for res in pool.imap_unordered(try_flag, attempts):
        update_counter(None)
        if res:
            flag, output = res
            print("Password found:", flag)
            print("Output:", output)
            pool.terminate()
            break

if __name__ == "__main__":
    main()
